FROM arm64v8/debian:bullseye-slim

# Install system dependencies in one RUN command to reduce layers
RUN apt-get update && apt-get install -y --no-install-recommends \
    openssh-server \
    git \
    curl \
    wget \
    nano \
    sudo \
    # C/C++ development tools via apt instead of conda
    build-essential \
    cmake \
    gdb \
    # Python basic tools
    python3 \
    python3-pip \
    python3-dev \
    # USB and hardware access tools
    usbutils \
    libusb-1.0-0 \
    udisks2 \
    udev \
    util-linux \
    fdisk \
    # Other utilities
    bzip2 \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Setup SSH
RUN mkdir -p /var/run/sshd \
    && echo 'root:password' | chpasswd \
    && sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config \
    # SSH login fix
    && sed -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' /etc/pam.d/sshd \
    # Configure SSH for better VS Code remote experience
    && echo "ClientAliveInterval 30" >> /etc/ssh/sshd_config \
    && echo "ClientAliveCountMax 120" >> /etc/ssh/sshd_config

# Create a dev user
RUN useradd -m -s /bin/bash dev \
    && echo "dev:password" | chpasswd \
    && adduser dev sudo \
    && echo "dev ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Set up workspace directory and permissions
RUN mkdir -p /home/dev/workspace \
    && chown -R dev:dev /home/dev/workspace \
    # Create mount points for USB devices
    && mkdir -p /media \
    && chmod 777 /media

# Install Miniconda - only use for Python packages
ENV CONDA_DIR /opt/miniconda3
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -O /tmp/miniconda.sh \
    && /bin/bash /tmp/miniconda.sh -b -p $CONDA_DIR \
    && rm /tmp/miniconda.sh \
    && $CONDA_DIR/bin/conda clean -a -y

# Make conda command available to all users
ENV PATH=$CONDA_DIR/bin:$PATH
RUN echo ". $CONDA_DIR/etc/profile.d/conda.sh" >> /etc/profile \
    && echo "conda activate" >> /etc/profile \
    && echo "export PATH=$CONDA_DIR/bin:$PATH" >> /etc/profile \
    # Give sudo access to conda command for dev user
    && echo "dev ALL=(ALL) NOPASSWD: $CONDA_DIR/bin/conda *" >> /etc/sudoers

# Create dev_env environment with Python tools ONLY (no C/C++ tools)
RUN conda create -y -n dev_env python=3.11 \
    && conda install -y -n dev_env \
        numpy \
        pandas \
        matplotlib \
        jupyter \
    && conda clean -a -y

# Configure dev user's bash profile to activate conda environment
RUN echo 'export PATH=/opt/miniconda3/bin:$PATH' >> /home/dev/.bashrc \
    && echo '. /opt/miniconda3/etc/profile.d/conda.sh' >> /home/dev/.bashrc \
    && echo 'conda activate dev_env' >> /home/dev/.bashrc

# Add USB access rules
COPY 99-usb-permissions.rules /etc/udev/rules.d/

# Add USB mount helper script
RUN echo '#!/bin/bash\n\
if [ "$#" -ne 1 ]; then\n\
    echo "Usage: $0 <device>"\n\
    echo "Example: $0 /dev/sdb1"\n\
    exit 1\n\
fi\n\
\n\
DEVICE=$1\n\
MOUNT_POINT="/media/$(basename $DEVICE)"\n\
\n\
mkdir -p "$MOUNT_POINT"\n\
mount "$DEVICE" "$MOUNT_POINT"\n\
\n\
if [ $? -eq 0 ]; then\n\
    echo "Device $DEVICE mounted at $MOUNT_POINT"\n\
    ls -la "$MOUNT_POINT"\n\
else\n\
    echo "Failed to mount $DEVICE"\n\
fi' > /usr/local/bin/mount-usb.sh \
    && chmod +x /usr/local/bin/mount-usb.sh

WORKDIR /home/dev/workspace

EXPOSE 22

CMD ["/usr/sbin/sshd", "-D"]
